use crate::buf;
// Packet IDs taken from
// [here](https://github.com/Itsyuka/osu-packet/blob/master/src/packets.js)
pub enum PacketIDs {
    ClientSendUserStatus = 0,
    ClientSendIrcMessage,
    ClientExit,
    ClientRequestStatusUpdate,
    ClientPong,
    BanchoLoginReply,
    BanchoCommandError,
    BanchoSendMessage,
    BanchoPing,
    BanchoHandleIrcChangeUsername,
    BanchoHandleIrcQuit,
    BanchoHandleOsuUpdate,
    BanchoHandleUserQuit,
    BanchoSpectatorJoined,
    BanchoSpectatorLeft,
    BanchoSpectateFrames,
    ClientStartSpectating,
    ClientStopSpectating,
    ClientSpectateFrames,
    BanchoVersionUpdate,
    ClientErrorReport,
    ClientCantSpectate,
    BanchoSpectatorCantSpectate,
    BanchoGetAttention,
    BanchoAnnounce,
    ClientSendIrcMessagePrivate,
    BanchoMatchUpdate,
    BanchoMatchNew,
    BanchoMatchDisband,
    ClientLobbyPart,
    ClientLobbyJoin,
    ClientMatchCreate,
    ClientMatchJoin,
    ClientMatchPart,
    BanchoMatchJoinSuccess,
    BanchoMatchJoinFail,
    ClientMatchChangeSlot,
    ClientMatchReady,
    ClientMatchLock,
    ClientMatchChangeSettings,
    BanchoFellowSpectatorJoined,
    BanchoFellowSpectatorLeft,
    ClientMatchStart,
    BanchoMatchStart,
    ClientMatchScoreUpdate,
    BanchoMatchScoreUpdate,
    ClientMatchComplete,
    BanchoMatchTransferHost,
    ClientMatchChangeMods,
    ClientMatchLoadComplete,
    BanchoMatchAllPlayersLoaded,
    ClientMatchNoBeatmap,
    ClientMatchNotReady,
    ClientMatchFailed,
    BanchoMatchPlayerFailed,
    BanchoMatchComplete,
    ClientMatchHasBeatmap,
    ClientMatchSkipRequest,
    BanchoMatchSkip,
    BanchoUnauthorised,
    ClientChannelJoin,
    BanchoChannelJoinSuccess,
    BanchoChannelAvailable,
    BanchoChannelRevoked,
    BanchoChannelAvailableAutojoin,
    ClientBeatmapInfoRequest,
    BanchoBeatmapInfoReply,
    ClientMatchTransferHost,
    BanchoLoginPermissions,
    BanchoFriendsList,
    ClientFriendAdd,
    ClientFriendRemove,
    BanchoProtocolNegotiation,
    BanchoTitleUpdate,
    ClientMatchChangeTeam,
    ClientChannelLeave,
    ClientReceiveUpdates,
    BanchoMonitor,
    BanchoMatchPlayerSkipped,
    ClientSetIrcAwayMessage,
    BanchoUserPresence,
    ClientUserStatsRequest,
    BanchoRestart,
    ClientInvite,
    BanchoInvite,
    BanchoChannelListingComplete,
    ClientMatchChangePassword,
    BanchoMatchChangePassword,
    BanchoBanInfo,
    ClientSpecialMatchInfoRequest,
    BanchoUserSilenced,
    BanchoUserPresenceSingle,
    BanchoUserPresenceBundle,
    ClientUserPresenceRequest,
    ClientUserPresenceRequestAll,
    ClientUserToggleBlockNonFriendPm,
    BanchoUserPmBlocked,
    BanchoTargetIsSilenced,
    BanchoVersionUpdateForced,
    BanchoSwitchServer,
    BanchoAccountRestricted,
    BanchoRtx,
    ClientMatchAbort,
    BanchoSwitchTourneyServer,
    ClientSpecialJoinMatchChannel,
    ClientSpecialLeaveMatchChannel,
}

#[derive(Debug)]
pub struct ClientStatus {
    pub status: u8,
    pub status_text: String,
    pub beatmap_checksum: String,
    pub current_mods: u32,
    pub play_mode: u8,
    pub beatmap_id: i32,
}

pub fn read_status(b: &mut buf::Buffer) -> ClientStatus {
    ClientStatus {  
        status: b.read_u8(),
        status_text: b.read_str(),
        beatmap_checksum: b.read_str(),
        current_mods: b.read_u32(),
        play_mode: b.read_u8(),
        beatmap_id: b.read_i32(),
    }
}